generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model School {
  id                   Int       @id @default(autoincrement())
  name                 String    @db.VarChar(255)
  klUuid               String?   @unique @db.Uuid              @map("kl_uuid")
  clientUuid           String    @db.Uuid                      @map("client_uuid")
  klOrgUuid            String?   @db.Uuid                      @map("kl_org_uuid")
  programNames         String[]                                @map("program_names")
  organizationName     String    @db.VarChar(255)              @map("organization_name")
  clientOrgUuid        String?   @db.Uuid                      @map("client_org_uuid")
  shortCode            String?   @db.VarChar(255)              @map("short_code")
  status               String?   @db.VarChar(255)              @map("status")
  createdAt            DateTime  @default(now())               @map("created_at")
  updatedAt            DateTime  @updatedAt                    @map("updated_at")
  deletedAt            DateTime?                               @map("deleted_at")

  @@index(clientUuid)
  @@index(klOrgUuid)

  @@map("schools")
}

model Program {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(255)
  klUuid        String    @unique @db.Uuid @map("kl_uuid")
  klOrgUuid     String    @db.Uuid         @map("kl_org_uuid")
  clientOrgUuid String?   @db.Uuid         @map("client_org_uuid")
  client        String?   @db.VarChar(255) @map("client")
  createdAt     DateTime  @default(now())  @map("created_at")
  updatedAt     DateTime  @updatedAt       @map("updated_at")
  deletedAt     DateTime?                  @map("deleted_at")

  @@index(clientOrgUuid)

  @@map("programs")
}

model Role {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(255)
  klUuid        String    @unique @db.Uuid            @map("kl_uuid")
  klOrgUuid     String    @db.Uuid                    @map("kl_org_uuid")
  system        Boolean   @db.Boolean @default(false) @map("system")
  client        String?   @db.VarChar(255)            @map("client")
  createdAt     DateTime  @default(now())             @map("created_at")
  updatedAt     DateTime  @updatedAt                  @map("updated_at")
  deletedAt     DateTime?                             @map("deleted_at")

  @@map("roles")
}

model Class {
  id               Int       @id @default(autoincrement())
  name             String    @db.VarChar(255)
  klUuid           String    @unique @db.Uuid @map("kl_uuid")
  klOrgUuid        String    @db.Uuid         @map("kl_org_uuid")
  clientUuid       String    @db.Uuid         @map("client_uuid")
  shortCode        String?   @db.VarChar(255) @map("short_code")
  organizationName String    @db.VarChar(255) @map("organization_name")
  schoolName       String    @db.VarChar(255) @map("school_name")
  programNames     String[]                   @map("program_names")
  client           String?   @db.VarChar(255) @map("client")
  errors           String[]
  status           String?   @db.VarChar(255) @map("status")
  createdAt        DateTime  @default(now())  @map("created_at")
  updatedAt        DateTime  @updatedAt       @map("updated_at")
  deletedAt        DateTime?                  @map("deleted_at")

  @@index(klOrgUuid)
  @@index(clientUuid)

  @@map("classes")
}

model User {
  id          String    @id @default(uuid())
  klUuid      String?   @unique @db.Uuid  @map("kl_uuid")
  clientUuid  String    @db.Uuid          @map("client_uuid")
  errors      String[]
  status      String?   @db.VarChar(255)
  createdAt   DateTime  @default(now())   @map("created_at")
  updatedAt   DateTime  @updatedAt        @map("updated_at")
  deletedAt   DateTime?                   @map("deleted_at")

  @@index(clientUuid)

  @@map("users")
}
